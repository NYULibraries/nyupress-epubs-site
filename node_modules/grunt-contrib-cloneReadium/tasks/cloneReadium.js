/*
 * grunt-contrib-writeHTML
 * https://github.com/NYULibraries/nyupress-epubs-site
 *
 * Copyright (c) 2014 New York University, contributors
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function ( grunt ) {
	
  function cloneReadium () {

    var path = require('path') ;
  
    var _ = require('underscore') ;
    
    var fs = require('fs') ;
    
    /** @TODO: find if there is a more elegant solution to this */
    var root = path.normalize(__dirname + '/../../..') ;
    
    var configuration = require( root + '/Gruntconfigurations') ;

    var taskConfiguration = configuration.gitclone() ;

    /** force task into asynchronous mode and grab a handle to the "done" function. */
    var done = this.async() ;
    
    var options = taskConfiguration.clone.options ;
    
    function linkBooks ( ) {

      var booksDirectory = options.booksDirectory ;
      
      var readiumDirectory = options.directory + '/' + options.directoryName ;
      
      if ( ! grunt.file.isDir ( booksDirectory ) ) throw new Error('The specified books directory does not exist: "' + booksDirectory  + '"') ;
      
      if ( ! grunt.file.isDir ( readiumDirectory ) ) throw new Error('The specified ReadiumJS directory does not exist: "' + readiumDirectory  + '"') ;
      
      if ( grunt.file.isDir ( readiumDirectory + '/epub_content' ) ) {

        grunt.file.delete( readiumDirectory + '/epub_content', { force: true } ) ;
        
        fs.symlinkSync( booksDirectory , readiumDirectory + '/epub_content' ) ;
      }
      
      done() ;

    }
    
    function clone ( ) {
      
      var directory = options.directory ;

      var clonePath = directory + '/' + options.directoryName ;
      
      var repository = options.repository ; 
      
      var spawnOpts = {} ;

      if ( grunt.file.isDir ( directory ) ) {
      
        if ( grunt.file.isDir ( clonePath ) ) {
        
         grunt.log.write('The specified clone directory exist: "' + clonePath  + '"').error() ;
         
         done() ;
         
        }
        
        else {

          spawnOpts.stdio = 'inherit' ;
          spawnOpts.branch = options.branch ;
          spawnOpts.repository = options.repository ;
          spawnOpts.directory = clonePath ;
            
          grunt.util.spawn ( {
              cmd: 'git',
              args: [ 'clone' , repository, clonePath ],
              opts: spawnOpts
          }, 
          function ( error, result, code ) { 	
            linkBooks ( ) ;
          } ) ;
        }
        
      }
        else {
          throw new Error('The specified directory does not exist: "' + directory  + '"') ;
        }
    }
    
    try {
      if ( taskConfiguration.clone.options.clone ) clone ( ) ;
    }
    catch ( err ) {
      console.log ( err ) ;
      grunt.log.write('Unknown error').error() ;
    }
  }
  
  grunt.registerTask('cloneReadium', 'Clone ReadiumJS', cloneReadium ) ;
  
} ;
